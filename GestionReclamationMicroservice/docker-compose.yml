version: "2.6"
services:
  # eureka server 
  eureka-server:
    build:
      context: C:\Micro-Services-SmartSchool\Eureka-server
      dockerfile: dockerFile
    container_name: eureka-server-container
    image: eureka-server-image
    ports:
      - "8761:8761"
    networks:
      - bored-network

  # mysql database      
  eventdb:
    container_name: eventdb
    image: mysql
    networks:
      - bored-network
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=event_data_base
    volumes:
      - dbvol2:/var/lib/mysql
    ports:
      - "3311:3306"
    restart: always

  # mysql2 database      
  reclamationdb:
    container_name: reclamationdb
    image: mysql
    networks:
      - bored-network
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=reclamation_data_base
    volumes:
      - dbvol:/var/lib/mysql
    ports:
      - "3310:3306"
    restart: always

  # postgresql database    

 # user-management-service:
  #  build:
   #   context: ..\school-micro-user
    #  dockerfile: dockerFile
   # container_name: management-service-container
   # image: management-service-image
   # networks:
    #  - bored-network
    #depends_on:
     # - eureka-server
    #ports:
     # - "8060:8060"

  event-service:
    build:
      context: C:\Micro-Services-SmartSchool\GestionEventsMicroService
      dockerfile: dockerFile
    container_name: event-service-container
    image: event-service-image
    networks:
      - bored-network
    depends_on:
      - eventdb
      - eureka-server
    ports:
      - "8090:8090"
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.datasource.url=jdbc:mysql://eventdb:3306/event_data_base?createDatabaseIfNotExists=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=root
      - spring.datasource.password=123456
      - spring.jpa.show-sql=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver

  reclamation-service:
    build:
      context: C:\Micro-Services-SmartSchool\GestionReclamationMicroservice
      dockerfile: dockerFile
    container_name: reclamation-service-container
    image: reclamation-service-image
    networks:
      - bored-network
    depends_on:
      - reclamationdb
      - eureka-server
    ports:
      - "8040:8040"
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.datasource.url=jdbc:mysql://reclamationdb:3306/reclamation_data_base?createDatabaseIfNotExists=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=root
      - spring.datasource.password=123456
      - spring.jpa.show-sql=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver
      
  spring-cloud-gateway-service:
     build:
       context: C:\Cloud-Gateway
       dockerfile: dockerFile
     container_name: spring-cloud-container
     image: spring-cloud-service-image
     networks:
       - bored-network
     depends_on:
      - reclamation-service
      - event-service
      - eureka-server
     ports:
      - "8051:8051"
    
     environment: 
     #- eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka 
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/ 
      SPRING_CLOUD_GATEWAY_ROUTES[0]_URI: http://reclamation-service-container:8040/
      SPRING_CLOUD_GATEWAY_ROUTES[0]_ID: reclamationModule
      SPRING_CLOUD_GATEWAY_ROUTES[0]_PREDICATES[0]: Path= /reclamations/*
      SPRING_CLOUD_GATEWAY_ROUTES[1]_URI: http://event-service-container:8090/
      SPRING_CLOUD_GATEWAY_ROUTES[1]_ID: eventModule
      SPRING_CLOUD_GATEWAY_ROUTES[1]_PREDICATES[0]: Path= /events/*
     
networks:
  bored-network:
    name: bored-network

volumes:
  dbvol:
  dbvol2:


